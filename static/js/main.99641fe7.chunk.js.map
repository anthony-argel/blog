{"version":3,"sources":["components/Home.js","components/Blog.js","components/BlogPost.js","components/BlogForm.js","components/LoginForm.js","components/Results.js","components/PostByTag.js","components/Search.js","components/NavBar.js","App.js","index.js"],"names":["Home","props","useState","posts","setPosts","selectedPost","setSelectedPost","useEffect","apiURL","fetch","method","then","res","console","log","status","json","reverse","length","selectedIndex","Math","floor","random","className","title","DateTime","fromISO","postdate","toFormat","dangerouslySetInnerHTML","__html","post","tags","map","value","index","tagname","_id","to","role","style","listStyleType","Blog","token","setToken","setTags","tempToken","localStorage","getItem","mode","name","tagvalues","tagInd","substr","BlogPost","setPost","commentsList","setCommentsList","message","setMessage","id","useParams","deleted","setDeleted","allTags","setAllTags","refresh","setRefresh","loadComments","deletePost","e","preventDefault","headers","push","checkDeleted","marginBottom","onClick","tagid","body","JSON","stringify","deleteTag","cursor","color","marginTop","display","marginRight","textDecoration","data-bs-toggle","data-bs-target","onSubmit","comment","htmlFor","required","onChange","target","rows","type","textAlign","comment_id","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","sentId","document","getElementById","i","sendBody","kappa","addTag","list","data-tag-id","BlogForm","setTitle","loggedIn","setLoggedIn","posted","setPosted","blogData","setBlogData","loginCheck","postCheck","refreshCheck","removeItem","minWidth","apiKey","process","TINY_KEY","onEditorChange","content","editor","initialValue","init","height","menubar","plugins","toolbar","LoginForm","user","setUser","password","setPassword","error","setError","setItem","setLogin","username","outline","padding","placeholder","Results","ChannelByTag","Search","searchstring","query","split","join","results","NavBar","tagName","setTagName","search","setSearch","history","useHistory","backgroundColor","aria-controls","aria-expanded","sendSearch","defaultValue","App","setApiURL","hashType","path","render","exact","PostByTag","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.99641fe7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {DateTime} from \"luxon\";\n\nfunction Home(props) {\n    const [posts, setPosts] = useState([]);\n    const [selectedPost, setSelectedPost] = useState(-1);\n\n    useEffect(()=> {\n        if(props.apiURL === '' ) return;\n        fetch(props.apiURL+'/blog', {\n            method: 'GET'\n        })\n        .then(res => {\n            console.log(res);\n            if(res.status === 200) return res.json();\n        })\n        .then(res => {setPosts(res.reverse())});\n    }, [props.apiURL]);\n\n    useEffect(() => {\n        if(posts.length > 0) {\n            const selectedIndex = Math.floor(Math.random() * posts.length);\n            setSelectedPost(selectedIndex);\n        }\n    }, [posts])\n\n    return (\n            <div className='container'>\n                <div className='row d-flex justify-content-evenly mb-3 '>\n                    <div className='col-12 col-lg-6'>\n\n                    <h2 className='h2 text-center'>Random Post</h2>\n\n                <div >{selectedPost !== -1 ?\n                <div className=\"card shadow-lg p-2\"> \n                    <div className=\"card-body\">\n                        <h5 className=\"card-title fs-2\">{posts[selectedPost].title}</h5>\n                            <p>Posted {DateTime.fromISO(posts[selectedPost].postdate).toFormat('LLL dd, yyyy')}</p>\n                            <hr/>\n                        <p className=\"card-text fs-5 lh-base\" dangerouslySetInnerHTML={{__html: posts[selectedPost].post}}></p>\n                        {posts[selectedPost].tags.length > 0 ? \n                        <div>\n                            <hr/>\n                            <p>Tags: \n                            {posts[selectedPost].tags.map((value, index) => {\n                                return <span key={value._id}>{value.tagname}{index + 1 !== posts[selectedPost].tags.length ? ',' : null}</span>\n                            })}\n                            </p>\n                        </div>\n                            : null}\n                        <Link to={'/blog/' + posts[selectedPost]._id} className='stretched-link'></Link>\n                    </div>\n                    </div> : \n                    <div className=\"spinner-border text-success\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                    </div>}\n                    </div>\n                    </div>\n\n\n\n\n                    <div className='col-12 col-lg-3 '>\n                    <div className=''><p className='fs-2'>Recent Posts</p>\n                        {selectedPost !== -1 ? \n                        <ul className='recent-posts lh-lg shadow-lg p-5' style={{listStyleType:'none'}}>\n                            <li><Link to={'/blog/'+posts[0]._id}>{posts[0].title}</Link></li>\n                            <hr/>\n                            <li><Link to={'/blog/'+posts[1]._id}>{posts[1].title}</Link></li>\n                            <hr/>\n                            <li><Link to={'/blog/'+posts[2]._id}>{posts[2].title}</Link></li></ul>\n                        :\n                        <div className=\"spinner-border text-success\" role=\"status\">\n                          <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        }</div>\n                    </div>\n                </div>\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            </div>\n\n\n            \n    )\n}\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../styles/index.css'\nimport {DateTime} from \"luxon\";\n\nfunction Blog(props) {\n    const [token, setToken] = useState('');\n    const [posts, setPosts] = useState([]);\n    const [tags, setTags] = useState([])\n\n    useEffect(()=> {\n        const tempToken = localStorage.getItem('token');\n        setToken(tempToken);    \n\n        \n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/blog', {\n            method: 'GET',\n            mode:'cors'\n        })\n        .then(res => res.json())\n        .then(res => {setPosts(res.reverse())});\n\n        fetch(props.apiURL+'/tags', {\n            method: 'GET',\n            mode: 'cors'\n        })\n        .then(res => res.json())\n        .then(res => setTags(res.tags))\n    }, [props.apiURL]);\n\n    useEffect(() => {\n        if(token !== '') {\n        }\n    }, [token]);\n\n\n    return (\n        <div className=\"container\">\n            <div className='row d-flex justify-content-around'>\n                <div className='col-12 col-lg-3 my-3'>\n                    {tags.length > 0 ? \n                    <div className='card shadow-lg p-3'>\n                        <p className='fs-2 text-center'>Tags</p>\n                        <hr/>\n                        {tags.map(value => {\n                            return (\n                                <Link to={'/tag/'+value._id} key={value._id} className='lh-lg fs-5'>{value.name}</Link>\n                            )\n                        })}\n                    </div>\n                    : null}\n                </div>\n\n                <div className='col-12 col-lg-8'>\n                {posts.length > 0 ? posts.map((value, index) => {\n                \n                return <div key={value._id} className=\"card my-3 p-3 shadow-lg\">\n                        <div className='card-body'>\n                            <h5 className='card-title fs-1'>{value.title}</h5>\n                             <p>Posted {DateTime.fromISO(value.postdate).toFormat('LLL dd, yyyy')}</p>\n                             {value.tags.length > 0 ? \n                            <div>\n                            <hr/>\n                            <p>Tags: \n                            {value.tags.map((tagvalues, tagInd) => {\n                                return <span key={tagvalues._id}>{tagvalues.tagname}{tagInd + 1 !== value.tags.length ? ', ' : null}</span>\n                            })}\n                            </p>\n                        </div>\n                            : null}\n                             <hr/>\n                            <p className='card-text lh-base fs-5' dangerouslySetInnerHTML={value.post.length > 200 ? {__html: value.post.substr(0,200) + '...'} : {__html: value.post}}></p>\n                            <Link to={'/blog/'+value._id} key={value._id} className='stretched-link'></Link> \n                        </div>\n                    </div>\n                \n            })\n                :\n                \n                <div className=\"spinner-border text-success\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                }\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Blog;","import React, { useEffect, useState } from \"react\";\nimport { Redirect, useParams, Link } from \"react-router-dom\";\nimport '../styles/index.css';\nimport { DateTime } from \"luxon\";\nimport {MdClose} from 'react-icons/md'\n\nfunction BlogPost(props) {\n    const [post, setPost] = useState();\n    const [commentsList, setCommentsList] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const {id} = useParams();\n    const [token, setToken] = useState('');\n    const [deleted, setDeleted] = useState(false);\n    const [allTags, setAllTags] = useState([]);\n    const [refresh, setRefresh] = useState(false);\n\n    useEffect(()=> {\n        if(props.apiURL === '') return;\n        const tempToken = localStorage.getItem('token');\n        if (tempToken !== null) {\n            setToken(tempToken);\n        }\n\n        fetch(props.apiURL+'/blog/'+id, {\n            method: 'GET'\n        })\n        .then(res => res.json())\n        .then(res => {setPost(res)});\n\n        fetch(props.apiURL+'/blog/'+id+'/comments', {\n            method: 'GET'\n        })\n        .then(res => res.json())\n        .then(res => {setCommentsList(res.reverse())});\n\n        fetch(props.apiURL+'/tags', {\n            method: 'GET',\n            mode: 'cors'\n        })\n        .then(res => res.json())\n        .then(res => setAllTags(res.tags))\n    }, [props.apiURL, id, refresh]);\n\n    const loadComments = () => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/blog/'+id+'/comments', {\n            method: 'GET'\n        })\n        .then(res => res.json())\n        .then(res => {setCommentsList(res.reverse())});\n    }\n\n    useEffect(()=> {\n    }, [post]);\n\n    function submitForm(e) {\n        e.preventDefault();\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/blog/'+id, {\n            method: 'POST',\n            body: JSON.stringify({comment: message}),\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'cors'\n        })\n        .then(res=> {\n            if(res.status === 200) {\n                loadComments();\n            }\n        })\n    }\n\n    const deletePost = (e) => {\n        e.preventDefault();\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/blog/'+id, {\n            method: 'DELETE',\n            headers: { 'Authorization' : 'Bearer ' + token },\n            mode: 'cors'\n        })\n        .then(res=> {\n            if(res.status === 200) {\n                setDeleted(true);\n            }\n        })\n    }\n\n    const checkDeleted = () => {\n        if(deleted) {\n            return <Redirect push to='/blog'/>\n        }\n    }\n\n    const deleteComment = (comment_id) => {\n        if(props.apiURL === '' || token === '') return;\n        fetch(props.apiURL+'/blog/'+id+\"/comment/\"+comment_id, {\n            method: 'DELETE',\n            headers: { 'Authorization' : 'Bearer ' + token},\n            mode: 'cors'\n        })\n        .then(res=> {\n            if(res.status === 200) {\n                loadComments();\n            }\n        })\n    }\n\n    function addTag(e) {\n        e.preventDefault();\n        if(props.apiURL === '' || token === '') return;\n        let sentId = '';\n        let tagname = document.getElementById('tag').value;\n        for(let i = 0; i < allTags.length; i++) {\n            if(tagname === allTags[i].name) {\n                sentId = allTags[i]._id;\n                break;\n            }\n        }\n        if(sentId === '') return;\n        let sendBody = {tagid: sentId, kappa:'kill me'};\n        console.log(sentId)\n        fetch(props.apiURL+'/blog/'+id+'/tag', {\n            method: 'POST',\n            headers: { 'Authorization' : 'Bearer ' + token, 'Content-Type': 'application/json' },\n            body: JSON.stringify(sendBody),\n            mode:'cors'\n        }).then(res => setRefresh(!refresh))\n    }\n\n    function deleteTag(e, tagid) {\n        e.preventDefault();\n        if(props.apiURL === '' || token === '') return;\n        fetch(props.apiURL+'/blog/'+id+'/tag', {\n            method: 'DELETE',\n            headers: { 'Authorization' : 'Bearer ' + token, 'Content-Type': 'application/json' },\n            body: JSON.stringify({tagid: tagid}),\n            mode: 'cors'\n        }).then(res => setRefresh(!refresh))\n    }\n\n    return (\n        <div className=\"container\">\n            {checkDeleted()}\n            <div className='row d-flex justify-content-center '>\n                <div className='col-11 col-lg-8'>\n                        {typeof post === 'undefined' ? \n                    <div className=\"spinner-border text-success\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    : post.map((value) => {\n                    return <div key={id} className='post'>\n                        <h1 className='h1' style={{marginBottom: \"2vh\"}}>{value.title}</h1>\n                        <h3>Posted {DateTime.fromISO(value.postdate).toFormat('LLL dd, yyyy')}</h3>\n                    <hr/><p className='message fs-5 lh-base' dangerouslySetInnerHTML={{__html: value.post}}></p>\n\n                                { value.tags.length > 0 ? \n                            <div>\n                                <hr/>\n                                    <p>Tags: \n                                {value.tags.map((tagvalues, tagInd) => {\n                                    return <span key={tagvalues._id}>{tagvalues.tagname}\n                                    {token !== '' ? \n                                    <MdClose onClick={e => deleteTag(e, tagvalues._id)} cursor='pointer' color='red'/>\n                                    :\n                                    null}\n                                    \n                                    {tagInd + 1 !== value.tags.length ? `, ` : null}</span>\n                                })}\n                                </p>\n                            </div>\n                            :\n                            null\n                            }\n\n                        <div style={{marginTop: \"4vh\", display:'flex'}}>\n                            {token === '' ? null : <p onClick={deletePost} style={{cursor:\"pointer\", marginRight:\"2vw\"}}>Delete Post</p>}\n                            {token === '' ? null : <Link to={`/blog/${id}/edit`} style={{textDecoration:'none', marginRight: '2vw', color:'black'}}>Edit Post</Link>}\n                            {token === '' ? null : <p data-bs-toggle=\"modal\" data-bs-target=\"#tagModal\" style={{cursor:'pointer'}}>\n                            Add Tag\n                            </p>}\n                            \n                        </div>\n                    </div>\n                })}\n\n\n\n\n\n\n                <form onSubmit={submitForm}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"comment-box\" className=\"form-label\"></label>\n                        <textarea className=\"form-control\" name='comment' required onChange={e => setMessage(e.target.value)} id=\"comment-box\" rows=\"3\"></textarea>\n                    </div>\n                    <input type='submit' value='Post Comment'></input>\n                </form>\n                <div className='commentArea'> \n                    <p style={{textAlign:\"center\", marginTop:\"3vh\"}}>Comments</p>\n                    <hr></hr>\n                    {typeof commentsList === 'undefined' ? \"Loading\" : commentsList.map((value) => {\n                        return <div className=\"mb-4\" key={value._id}>\n                            <p className='fs-5'>{value.message}</p>\n                            {token === '' ? null : <button style={{cursor:\"pointer\"}} value={value._id} onClick={() => {deleteComment(value._id)}}>Delete</button>}         \n                        </div>\n                    })}\n                    </div>\n                </div>\n            </div>\n\n            \n\n\n            <div className=\"modal fade\" id=\"tagModal\" tabIndex=\"-1\" aria-labelledby=\"tagModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"tagModalLabel\">Tag Form</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"modal-body\" >\n                    <form onSubmit={e => addTag(e)}>\n                        <input list='tags'  className='mx-3' name='tag' id='tag'/>\n                        <datalist id='tags'>\n                            {allTags.map((value, index) => {\n                                return <option key={value._id} data-tag-id={value._id} value={value.name}></option>\n                            })}\n                        </datalist>\n                        <button className=\"btn btn-primary\" type='submit'>Add Tag</button>\n                    </form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n                </div>\n            </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default BlogPost;","import React, { useEffect, useState } from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Editor } from '@tinymce/tinymce-react';\nimport '@tinymce/tinymce-react'\nimport '../styles/index.css'\n\nfunction BlogForm(props) {\n    const [token, setToken] = useState('');\n    const [post, setPost] = useState('');\n    const [title, setTitle] = useState('');\n    const [loggedIn, setLoggedIn] = useState(true);\n    const [posted, setPosted] = useState(false);\n    const {id} = useParams();\n    const [refresh, setRefresh] = useState(false);\n\n    const [blogData, setBlogData] = useState();\n\n    useEffect(()=> {\n        if(props.apiURL === '') return;\n        if(id) {\n            fetch(props.apiURL+'/blog/' + id, {\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    return res.json();\n                }    \n            })\n            .then(res => setBlogData(res))\n        }\n\n        const tempToken = localStorage.getItem('token');\n        if(tempToken === null) {\n            setLoggedIn(false);\n        }\n        else {\n            setToken(tempToken);\n        }\n    }, [id, props.apiURL]);\n\n    useEffect(() => {\n        if(blogData) {\n            setPost(blogData[0].post);\n        }\n    }, [blogData])\n\n    useEffect(() => {\n        if(token !== '') {\n        }\n    }, [token]);\n\n    function postBlogPost(e) {\n        e.preventDefault();\n        fetch('https://quiet-retreat-88465.herokuapp.com/blog', {\n            method: 'POST',\n            body: JSON.stringify({post:post, title:title}),\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : 'Bearer ' + token },\n            mode: 'cors'\n        })\n        .then(res => {\n            if(res.status === 401) { // token expired\n                localStorage.removeItem('token');\n            }\n            if(res.status === 200) {\n                setPosted(true);\n            }    \n        })\n    }\n\n    const loginCheck = () => {\n        if(!loggedIn) \n            return <Redirect push to='/login'/>\n    }\n\n    const postCheck = () => {\n        if(posted) {\n            return <Redirect push to='/blog'/>\n        }\n    }\n\n    const refreshCheck = () => {\n        if(refresh) {\n            return <Redirect push to={`/blog/${id}`}/>;\n        }\n    }\n\n    const updateBlogPost = (e) => {\n        e.preventDefault();\n        fetch('https://quiet-retreat-88465.herokuapp.com/blog/'+id, {\n            method: 'PUT',\n            body: JSON.stringify({post:post, title:title}),\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : 'Bearer ' + token },\n            mode: 'cors'\n        })\n        .then(res => {\n            if(res.status === 401) { // token expired\n                localStorage.removeItem('token');\n            }\n            if(res.status === 200) {\n                if(blogData) {\n                    setRefresh(true);\n                } else {\n                    setPosted(true);\n                }\n            }    \n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <div className='row'>\n                <div className='col'>\n            {loginCheck()}\n            {postCheck()}\n            {refreshCheck()}\n            <h1 className='text-center h1'>{blogData ? 'Update Post' : 'Create Post'}</h1>\n            \n            <form  onSubmit={blogData ? updateBlogPost : postBlogPost}>\n                {blogData ? \n                    <div>\n                        <label htmlFor='prev-title'>Previous Title:</label><br/>\n                        <input type='text' style={{minWidth:\"30vw\", marginBottom:\"3vh\"}} value={blogData[0].title} required={true}></input>\n                    </div>\n                : null}\n                    <div>\n                    <label htmlFor='title'>Title:</label><br/>\n                    <input type='text' style={{minWidth:\"30vw\", marginBottom:\"3vh\"}} required={true} onChange={e => setTitle(e.target.value)}></input>\n                    </div>\n                <Editor apiKey={process.env.TINY_KEY}\n                    onEditorChange={(content, editor) => setPost(content)}\n                    initialValue={blogData ? blogData[0].post : \"\"}\n                    init={{\n                    height: 500,\n                    menubar: 'insert',\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount media'\n                    ],\n                    toolbar:\n                        'undo redo | formatselect | bold italic backcolor | \\\n                        alignleft aligncenter alignright alignjustify | \\\n                        bullist numlist outdent indent | removeformat | help | image | media | link'\n                    }}\n                />\n                <input type='submit' value='submit'></input>\n            </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BlogForm;","import React, { useEffect, useState } from \"react\";\nimport '../styles/index.css';\nimport { Redirect } from 'react-router-dom';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [token, setToken] = useState('');\n    const [error, setError] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    function login(e){\n        e.preventDefault();\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/login', {\n            method: 'POST',\n            body: JSON.stringify({username: user, password: password}),\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'cors'\n        })\n        .then(res => {\n            if(res.status === 400){\n                localStorage.removeItem('token');\n                setError(true);\n            }\n            else {\n                return res.json()\n            }\n        })\n        .then(res => {\n            if(res) {\n                setToken(res.token);\n            }\n        })\n        \n    }\n\n    useEffect(() => {\n        if(token !== '') {\n            localStorage.setItem('token', token);\n            props.setLogin(true);\n            setLoggedIn(true);\n        }\n    }, [token]);\n\n    const loginCheck = () => {\n        if(loggedIn) {\n            return <Redirect push to={`/blog`}/>;\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className='row d-flex justify-content-center'>\n                <div className='col-6'>\n                {loginCheck()}\n            <form onSubmit={login} className='login-form text-center' style={{outline: \"3px solid black\", padding:\"2vw\"}}>\n                <h1 className=' h1 mb-3 text-center'>Login Form</h1>\n                <input type=\"text\" \n                className='form-control  mb-3'\n                name=\"username\" \n                required\n                placeholder='username'\n                onChange={e => setUser(e.target.value)}></input>\n                <input type=\"password\"\n                className='form-control mb-3' \n                name=\"password\"\n                placeholder='password'\n                required\n                onChange={e => setPassword(e.target.value)}></input>\n                <input type=\"submit\" value='login'></input>\n            </form>\n            {error ? <p>Failed to log in. Please try again.</p> : null}\n                </div>\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default LoginForm;","import {Link} from 'react-router-dom';\nimport {DateTime} from 'luxon';\nconst Results = (props) => {\n    return (\n        <div className='container'>\n            <div className='row d-flex justify-content-center'>\n\n                <div className='col-12 col-lg-8'>\n                    <h1>Results: {props.posts.length}</h1>\n                {props.posts.length > 0 ? props.posts.map((value, index) => {\n                \n                return <div key={value._id} className=\"card my-3 p-3 shadow-lg\">\n                        <div className='card-body'>\n                            <h5 className='card-title fs-1'>{value.title}</h5>\n                             <p>Posted {DateTime.fromISO(value.postdate).toFormat('LLL dd, yyyy')}</p>\n                             {value.tags.length > 0 ? \n                            <div>\n                            <hr/>\n                            <p>Tags: \n                            {value.tags.map((tagvalues, tagInd) => {\n                                return <span>{tagvalues.tagname}{tagInd + 1 !== value.tags.length ? ', ' : null}</span>\n                            })}\n                            </p>\n                        </div>\n                            : null}\n                             <hr/>\n                            <p className='card-text lh-base fs-5' dangerouslySetInnerHTML={value.post.length > 200 ? {__html: value.post.substr(0,200) + '...'} : {__html: value.post}}></p>\n                            <Link to={'/blog/'+value._id} key={value._id} className='stretched-link'></Link> \n                        </div>\n                    </div>\n                \n            })\n                :\n                <p>No results</p>\n                }\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default Results;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Results from './Results';\n\nconst ChannelByTag = (props) => {\n    const [posts, setPosts] = useState([]);\n    const {tagid} = useParams();\n    useEffect(() => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/tag/'+tagid+'/posts', {\n            method: 'GET',\n            mode: 'cors'\n        })\n        .then(res => res.json())\n        .then(res => setPosts(res.posts.reverse()))\n    }, [props.apiURL, tagid])\n\n    return (\n        <Results title={tagid} posts={posts}/>\n    )\n}\n\nexport default ChannelByTag;","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport Results from './Results';\n\nconst Search = (props) => {\n    \n    const [posts, setPosts] = useState([]);\n    let {searchstring} = useParams();\n\n    useEffect(() => {\n        if(props.apiURL !== '' && searchstring !== '') {\n            let query = searchstring.split('_').join(' ');\n            fetch(props.apiURL+'/search?query='+query, {\n                method:'GET',\n                mode:'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setPosts(res.results);\n            });\n        }\n    }, [props.apiURL, searchstring]);\n\n    return (\n        <Results title={'Search: '+ searchstring.split('_').join(' ')} posts={posts}/>\n    )\n}\n\nexport default Search;","import {Link, useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport {FaSearch} from 'react-icons/fa';\n\nconst NavBar = (props) => {\n    const [tagName, setTagName] = useState('');\n    const [token, setToken] = useState('');\n    const [search, setSearch] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        if(localStorage.getItem('token') !== '') {\n            setToken(localStorage.getItem('token'));\n        }\n    }, [])\n\n    function logOut() {\n        localStorage.removeItem('token');\n        props.setLogin(false);\n    }\n\n    function sendSearch(e) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            history.push('/search/'+search.split(' ').join('_'))\n        }\n    }\n\n    function createTag(e) {\n        if(props.apiURL === '' || token === '' || tagName === '') return;\n        fetch(props.apiURL+'/tag/', {\n            method:'POST',\n            headers: { 'Authorization' : 'Bearer ' + token, 'Content-Type': 'application/json' },\n            body: JSON.stringify({name: tagName}),\n            mode:'cors'\n        }).then(res => setTagName(''));\n    }\n\n    return (\n        <nav className='navbar navbar-light navbar-expand-md shadow mb-5' style={{backgroundColor:\"#44b787\"}}>\n            <div className='container'>\n                <Link to='/' className='navbar-brand'>Home</Link>\n                <button className='navbar-toggler' type='button' data-bs-toggle='collapse' data-bs-target='#navContent' aria-controls='navContent' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse d-flex justify-content-end' id='navContent'>\n                    <ul className='navbar-nav d-flex'>\n                        <li className='nav-item'>\n                        <form className=\"form-inline my-2 my-lg-0 d-flex\" onSubmit={e => sendSearch(e)}>\n                            <input className=\"form-control mr-sm-2 rounded-start\" required type=\"text\" onChange={(e) => setSearch(e.target.value)} name='query' placeholder=\"Search\" aria-label=\"Search\"/>\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" type='submit' style={{backgroundColor:'darkGreen'}} ><FaSearch color='black'/></button>\n                        </form>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/blog' className='nav-link'>Blog</Link>\n                        </li>\n                        {props.loggedIn ? <li className='nav-item'><p className='nav-link' data-bs-toggle=\"modal\" data-bs-target=\"#createTagModal\" style={{cursor:'pointer', marginBottom:'0'}}>Add Tag</p></li> : null}\n                        {props.loggedIn ? <li className='nav-item'><Link to='/blog/create' className='nav-link'>Create</Link></li> : null}\n                        {!props.loggedIn ? <li className='nav-item'><Link to='/login' className='nav-link'>Login</Link></li> : <li onClick={logOut} className='nav-item nav-link' style={{cursor:'pointer'}}>Log Out</li>}\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"modal fade\" id=\"createTagModal\" tabIndex=\"-1\" aria-labelledby=\"createTagModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"createTagModalLabel\">Tag Form</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"modal-body\" >\n                    <form>\n                        {\n                            tagName === '' ?\n                            <input type='text' required onChange={e => setTagName(e.target.value)} defaultValue=''></input> :\n                            <input type='text' required onChange={e => setTagName(e.target.value)}></input>\n                        }\n                        <button className=\"btn btn-primary\" type='button' onClick={e => createTag(e)}>Create Tag</button>\n                    </form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n                </div>\n            </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React, { useEffect, useState } from \"react\";\nimport Home from './components/Home';\nimport Blog from './components/Blog';\nimport BlogPost from './components/BlogPost';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport PostByTag from './components/PostByTag';\nimport Search from './components/Search';\nimport NavBar from './components/NavBar';\nimport {\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [apiURL, setApiURL] = useState('');\n  useEffect(() => {\n    let url = 'https://quiet-retreat-88465.herokuapp.com'; \n    setApiURL(url);\n  }, []);\n\n  useEffect(() => {\n    if(apiURL === '') return;\n    if(localStorage.getItem('token') !== null) {\n      fetch(apiURL+'/verify',{\n        method: 'get',\n        headers: { 'Authorization' : 'Bearer ' + localStorage.getItem('token') },\n        mode: 'cors'\n    })\n    .then(res => {\n      if (res.status === 200) {\n        setLoggedIn(true);\n      }\n      else {\n        setLoggedIn(false);\n        localStorage.removeItem('token');\n      }\n    })\n    }\n\n  }, [apiURL])\n  \n  function setLogin(status) {\n    setLoggedIn(status);\n  }\n\n\n  useEffect(() => {\n  }, [loggedIn])\n\n  return (\n    <div className=\"App\">\n      <HashRouter hashType={'slash'}>\n      <NavBar setLogin={setLogin} apiURL={apiURL === ''? '' : apiURL} loggedIn={loggedIn}/>\n      <Switch>\n          <Route path='/' render ={() => <Home apiURL={apiURL === ''? '' : apiURL} />} exact></Route>\n          <Route path='/search/:searchstring' exact><Search apiURL={apiURL === ''? '' : apiURL}/></Route>\n          <Route path='/blog/' exact><Blog apiURL={apiURL === ''? '' : apiURL} /></Route>\n          <Route path='/blog/create' exact><BlogForm apiURL={apiURL === ''? '' : apiURL} /></Route>\n          <Route path='/blog/:id/edit' exact><BlogForm apiURL={apiURL === ''? '' : apiURL} /></Route>\n          <Route path='/blog/:id' exact><BlogPost apiURL={apiURL === ''? '' : apiURL} /></Route>\n          <Route path='/tag/:tagid' exact><PostByTag apiURL={apiURL === ''? '' : apiURL}/></Route>\n          <Route path='/login' exact><LoginForm apiURL={apiURL === ''? '' : apiURL} setLogin={setLogin}/></Route>\n          </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","\nimport './styles/index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}